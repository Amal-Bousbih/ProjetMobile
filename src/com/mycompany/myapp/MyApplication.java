package com.mycompany.myapp;


import Entities.Location;
import Entities.Velo;
import Entities.Zone;
//2import GUI.Chart;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import gui.AddLocation;
import gui.AddVelo;
import gui.AddZone;
import gui.Authentification;
import gui.HomeAdmin;
import gui.ListVelo;
import gui.ListZone;
import gui.LocationList;
import services.services;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme_1_1");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public  void start() {
       /* if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Hi World", BoxLayout.y());
        hi.add(new Label("Hi World"));
        hi.show();*/
       //Zone z = new Zone();
       //Location l = new Location();
       //Velo v = new Velo();
       //new services().addLocation(l);
      
       /*AddLocation lgWnd = new AddLocation();
        Form loginForm = lgWnd.getq();
        loginForm.show();*/
       //new HomeAdmin().show();
       //new Authentification().show();
       //new Chart().show();
       //new ListZone(theme).show();
      //new AddVelo(theme).show();
       
      
      
       //new LocationList(theme).show();
       
       
       
       
       
      /* AddLocation lgWnd = new AddLocation();
        Form Addl = lgWnd.getq();
        Addl.show();*/
       //new ListVelo(theme).show();
       //new Authentification(theme).show();
       //new AddLocation().show();
       
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
